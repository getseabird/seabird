name: release

on:
  pull_request:
  push:

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    container:
      image: debian:trixie
      env:
        DEBIAN_FRONTEND: noninteractive
    steps:
      - if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: echo "flags=--snapshot" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
          # dpkg --add-architecture arm64
          apt update
          apt install -yq libgtk-4-dev libgtksourceview-5-dev libadwaita-1-dev libgirepository1.0-dev git golang-go
          # apt install -yq gcc-aarch64-linux-gnu libc6-dev-arm64-cross libgtk-4-dev:arm64 libgtksourceview-5-dev:arm64 libadwaita-1-dev:arm64 libgirepository1.0-dev:arm64
          git config --global --add safe.directory '*'
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          args: release --clean ${{ env.flags }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  msys2:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up msys
        uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          update: true
          install: |
            mingw-w64-x86_64-gcc 
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-gtk4
            mingw-w64-x86_64-libadwaita
            mingw-w64-x86_64-gtksourceview5
            mingw-w64-x86_64-gobject-introspection
            mingw-w64-x86_64-go
      - name: Build
        run: |
          uname -a
          export GOROOT=/mingw64/lib/go
          export GOPATH=/mingw64
          go build main.go
